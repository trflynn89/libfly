#!/usr/bin/env bash

USER="trflynn89"
REPO="libfly"
BASE=$(grep -oP "(?<=FROM )(\S+)" Dockerfile | tr -cd '[:alnum:]')

MAKE_VARS=$(make -C ../nix -qp)

QT_VERSION_MAJOR=$(grep -oP "(?<=QT_VERSION_MAJOR := )(\d+)" <<< $MAKE_VARS)
QT_VERSION_MINOR=$(grep -oP "(?<=QT_VERSION_MINOR := )(\d+)" <<< $MAKE_VARS)
QT_VERSION_PATCH=$(grep -oP "(?<=QT_VERSION_PATCH := )(\d+)" <<< $MAKE_VARS)
QT_VERSION="${QT_VERSION_MAJOR}${QT_VERSION_MINOR}${QT_VERSION_PATCH}"

QT_INSTALLER_URL=$(grep -oP "(?<=QT_INSTALLER_URL := )(\S+)" <<< $MAKE_VARS)
QT_INSTALLER_EXE=$(grep -oP "(?<=QT_INSTALLER_EXE := )(\S+)" <<< $MAKE_VARS)

CLANG_VERSION=9
GCC_VERSION=9

TAG="${BASE}_clang${CLANG_VERSION}_gcc${GCC_VERSION}_qt${QT_VERSION}"

usage()
{
    echo "Build, run, or push a $REPO container"
    echo "Usage: $0 [-b] [-r] [-p]"
}

build()
{
    docker build \
        --tag "${USER}/${REPO}:${TAG}" \
        --build-arg QT_INSTALLER_URL=$QT_INSTALLER_URL \
        --build-arg QT_INSTALLER_EXE=$QT_INSTALLER_EXE \
        --build-arg CLANG_VERSION=$CLANG_VERSION \
        --build-arg GCC_VERSION=$GCC_VERSION \
        .

    if [[ $? -ne 0 ]] ; then
        echo "Failed to build $REPO Qt container"
        exit 1
    fi
}

run()
{
    docker rm $REPO > /dev/null 2>&1

    docker run -it \
        --name $REPO \
        --cap-add SYS_PTRACE \
        "${USER}/${REPO}:${TAG}"
}

push()
{
    docker push "${USER}/${REPO}:${TAG}"
}

main()
{
    declare -a commands

    while getopts ":brph" opt ; do
        case $opt in
            b)
                commands+=(build)
                ;;
            r)
                commands+=(run)
                ;;
            p)
                commands+=(push)
                ;;
            h)
                commands+=(usage)
                ;;
            \?)
                echo -e "Invalid option: -$OPTARG\n" >&2
        esac
    done

    if [[ ${#commands[@]} -eq 0 ]] ; then
        usage
        exit 1
    fi

    for command in "${commands[@]}" ; do
        $command
    done
}

main $@
