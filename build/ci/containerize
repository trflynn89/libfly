#!/usr/bin/env bash

USER="trflynn89"
REPO="libfly"

MAKE_VARS=$(make -C ../nix -qp)

QT_VERSION_MAJOR=$(grep -oP "(?<=QT_VERSION_MAJOR := )(\d+)" <<< $MAKE_VARS)
QT_VERSION_MINOR=$(grep -oP "(?<=QT_VERSION_MINOR := )(\d+)" <<< $MAKE_VARS)
QT_VERSION_PATCH=$(grep -oP "(?<=QT_VERSION_PATCH := )(\d+)" <<< $MAKE_VARS)
QT_VERSION="${QT_VERSION_MAJOR}${QT_VERSION_MINOR}${QT_VERSION_PATCH}"

QT_INSTALLER_URL=$(grep -oP "(?<=QT_INSTALLER_URL := )(\S+)" <<< $MAKE_VARS)
QT_INSTALLER_EXE=$(grep -oP "(?<=QT_INSTALLER_EXE := )(\S+)" <<< $MAKE_VARS)

CLANG_VERSION=9
GCC_VERSION=9

usage()
{
    echo "Build, run, or push a $REPO container for a specific toolchain"
    echo "Supported toolchains: clang, gcc"
    echo
    echo "Usage: $0 [-b <toolchain>] [-r <toolchain>] [-p <toolchain>]"
}

# Really simple hashtable implementation
hput()
{
    eval "$1""$2"='$3'
}

hget()
{
    eval echo '${'"$1$2"'}'
}

# Build the base container with Qt and the container with the desired toolchain.
#
# $1 = The desired toolchain.
# $2 = The toolchain version.
build()
{
    local toolchain=$1
    local version=$2

    docker build \
        --tag "$USER/$REPO:base" \
        --build-arg QT_INSTALLER_URL=$QT_INSTALLER_URL \
        --build-arg QT_INSTALLER_EXE=$QT_INSTALLER_EXE \
        --file Dockerfile.base .

    if [[ $? -ne 0 ]] ; then
        echo "Failed to build base Qt container"
        exit 1
    fi

    docker build \
        --tag "$USER/$REPO:${toolchain}" \
        --build-arg TOOLCHAIN_VERSION=$version \
        --file Dockerfile.${toolchain} .

    if [[ $? -ne 0 ]] ; then
        echo "Failed to build ${toolchain} Qt container"
        exit 1
    fi
}

# Create and run an image from the container with the desired toolchain.
#
# $1 = The desired toolchain.
run()
{
    local toolchain=$1

    docker rm $REPO > /dev/null 2>&1

    docker run -it \
        --name $REPO \
        --cap-add SYS_PTRACE \
        "$USER/$REPO:${toolchain}"
}

# Push the container with the desired toolchain to Docker Hub.
#
# $1 = The desired toolchain.
push()
{
    local toolchain=$1

    docker push "$USER/$REPO:${toolchain}"
}

# Map of toolchain versions
hput TOOLCHAINS clang 9
hput TOOLCHAINS gcc 9

while getopts ":b:r:p:" opt ; do
    case "$opt" in
        b)
            method=build
            toolchain=${OPTARG}
            version=$(hget TOOLCHAINS $toolchain)
            ;;
        r)
            method=run
            toolchain=${OPTARG}
            version=$(hget TOOLCHAINS $toolchain)
            ;;
        p)
            method=push
            toolchain=${OPTARG}
            version=$(hget TOOLCHAINS $toolchain)
            ;;
    esac
done

if [[ -z "$toolchain" ]] || [[ -z "$version" ]] ; then
    usage
    exit 1
fi

$method $toolchain $version
