trigger:
  branches:
    include:
    - main

  tags:
    include:
    - '*'

stages:
  - stage: Lint
    jobs:
    - job: 'Lint'

      pool:
        vmImage: ubuntu-20.04

      steps:
      - template: build/ci/setup.yml
        parameters:
          with_catch2: false

      - script: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main" | sudo tee -a /etc/apt/sources.list.d/llvm.list

          sudo apt-get update
          sudo apt-get install -y clang-format-14
        displayName: 'Dependencies'

      - script: |
          make style formatter=clang-format-14 check=1
        displayName: 'Style'

  - stage: Linux
    dependsOn:
      - Lint

    jobs:
      - template: build/ci/linux.yml
        parameters:
          toolchain: 'clang'
          mode: 'debug'
          arch: 'x86'
          sanitize: 'address' # UndefinedBehaviorSanitizer fails to link on x86 clang.

      - template: build/ci/linux.yml
        parameters:
          toolchain: 'clang'
          mode: 'debug'
          arch: 'x64'
          coverage: '1'
          sanitize: 'address,undefined'

      - template: build/ci/linux.yml
        parameters:
          toolchain: 'clang'
          mode: 'release'
          arch: 'x86'

      - template: build/ci/linux.yml
        parameters:
          toolchain: 'clang'
          mode: 'release'
          arch: 'x64'

      - template: build/ci/linux.yml
        parameters:
          toolchain: 'gcc'
          mode: 'debug'
          arch: 'x86'
          sanitize: 'address,undefined'

      - template: build/ci/linux.yml
        parameters:
          toolchain: 'gcc'
          mode: 'debug'
          arch: 'x64'
          sanitize: 'address,undefined'

      - template: build/ci/linux.yml
        parameters:
          toolchain: 'gcc'
          mode: 'release'
          arch: 'x86'

      - template: build/ci/linux.yml
        parameters:
          toolchain: 'gcc'
          mode: 'release'
          arch: 'x64'

  - stage: macOS
    dependsOn:
      - Lint

    jobs:
      - template: build/ci/macos.yml
        parameters:
          mode: 'debug'
          sanitize: 'address,undefined'

      - template: build/ci/macos.yml
        parameters:
          mode: 'release'

  - stage: Windows
    dependsOn:
      - Lint

    jobs:
      - template: build/ci/windows.yml
        parameters:
          mode: 'Debug'
          arch: 'x86'

      - template: build/ci/windows.yml
        parameters:
          mode: 'Debug'
          arch: 'x64'

      - template: build/ci/windows.yml
        parameters:
          mode: 'Release'
          arch: 'x86'

      - template: build/ci/windows.yml
        parameters:
          mode: 'Release'
          arch: 'x64'

  - stage: Complete
    dependsOn:
      - Linux
      - macOS
      - Windows

    pool:
      vmImage: ubuntu-20.04

    jobs:
    - job: 'Coverage'

      steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: current
          downloadType: all
          artifactName: coverage
          downloadPath: $(System.ArtifactsDirectory)
        displayName: Download

      - script: |
          bash <(curl -s https://codecov.io/bash) -f $(System.ArtifactsDirectory)/coverage/coverage
        displayName: Upload

    - job: 'Publish'
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

      steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: current
          downloadType: all
          artifactName: libfly
          downloadPath: $(System.ArtifactsDirectory)
        displayName: Download

      - task: GitHubRelease@0
        inputs:
          action: edit
          tag: $(Build.SourceBranchName)
          tagSource: 'Git tag'
          gitHubConnection: trflynn89
          repositoryName: trflynn89/libfly
          assets: $(System.ArtifactsDirectory)/libfly/*
          assetUploadMode: delete
        displayName: Publish
